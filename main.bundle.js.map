{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/entities/question.ts","./src/app/evaluation/evaluation.component.css","./src/app/evaluation/evaluation.component.html","./src/app/evaluation/evaluation.component.ts","./src/app/evaluator/evaluator.service.ts","./src/app/http-question/http-question.service.ts","./src/app/questionnaire/questionnaire.component.css","./src/app/questionnaire/questionnaire.component.html","./src/app/questionnaire/questionnaire.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"!questionnaireFinished\\\">\\n  <img class=\\\"img\\\" src=\\\"../assets/images/stencil.default-300x200.jpg\\\" />\\n  <h1>Was ist Ihre Immobilie wert?</h1>\\n  <p>Berechnen Sie ganz einfach den Preis Ihrer Immobilie in wenigen Schritten.</p>\\n  <button class=\\\"btn control\\\" (click)=\\\"onStartButtonClicked()\\\" *ngIf=\\\"!questionnaireInProgress&&!questionnaireFinished\\\">âœ” Jetzt starten</button>\\n</div>\\n\\n\\n\\n<app-questionnaire *ngIf=\\\"questionnaireInProgress\\\" [question]=\\\"selectedQuestion\\\"></app-questionnaire>\\n\\n<app-evaluation *ngIf=\\\"questionnaireFinished\\\" [evaluatedValue]=\\\"evaluatedValue\\\"></app-evaluation>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Question } from './entities/question';\nimport { EvaluatorService } from './evaluator/evaluator.service';\nimport { HttpQuestionService } from './http-question/http-question.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n  questionnaireInProgress = false;\n  questionnaireFinished = false;\n  selectedQuestion: Question;\n  evaluatedValue = 0;\n  constructor(private evaluator: EvaluatorService, private httpQuestionService: HttpQuestionService) {}\n\n  ngOnInit() {\n  }\n\n  public onStartButtonClicked() {\n    this.evaluator.newQuestionObservable.subscribe(\n      {\n        next: data => {\n          this.selectedQuestion = data;\n          this.questionnaireInProgress = true;\n        },\n        complete: () => {\n          this.questionnaireFinished = true;\n          this.questionnaireInProgress = false;\n          this.httpQuestionService.evaluate(this.evaluator.answered).subscribe(data => this.evaluatedValue = data);\n        },\n        error: () => { this.selectedQuestion = null; }\n      }\n    );\n    this.httpQuestionService.getQuestion().subscribe(question => this.evaluator.nextQuestion(question));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\n\n\nimport { AppComponent } from './app.component';\nimport { EvaluationComponent } from './evaluation/evaluation.component';\nimport { EvaluatorService } from './evaluator/evaluator.service';\nimport { HttpQuestionService } from './http-question/http-question.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { QuestionnaireComponent } from './questionnaire/questionnaire.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EvaluationComponent,\n    QuestionnaireComponent\n      ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [EvaluatorService, HttpQuestionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Possibility } from './possibility';\r\n\r\nexport class Question {\r\n    questionId: number;\r\n    type = 'button';\r\n    classForHTMLElement = '';\r\n    text: string;\r\n    possibleAnswers: Possibility[];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/entities/question.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/evaluation/evaluation.component.css\n// module id = ./src/app/evaluation/evaluation.component.css\n// module chunks = main","module.exports = \"<h1>Ihre Anfrage wurde weitergeleitet und wird nun bearbeitet!</h1>\\n\\n<p>GeschÃ¤tzter Wert: {{evaluatedValue}}</p>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/evaluation/evaluation.component.html\n// module id = ./src/app/evaluation/evaluation.component.html\n// module chunks = main","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { Question } from '../entities/question';\nimport { Possibility } from '../entities/possibility';\nimport { EvaluatorService } from '../evaluator/evaluator.service';\n\n@Component({\n  selector: 'app-evaluation',\n  templateUrl: './evaluation.component.html',\n  styleUrls: ['./evaluation.component.css']\n})\nexport class EvaluationComponent implements OnChanges {\n  @Input() evaluatedValue: number;\n  ngOnChanges() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/evaluation/evaluation.component.ts","import { Injectable } from '@angular/core';\nimport { Possibility } from '../entities/possibility';\nimport { Observable } from 'rxjs/observable';\nimport { Subject } from 'rxjs/subject';\nimport { Question } from '../entities/question';\n\n@Injectable()\nexport class EvaluatorService {\n\n  private newQuestionSubject: Subject<Question> = new Subject();\n  public newQuestionObservable: Observable<Question> = this.newQuestionSubject.asObservable();\n\n  public answered: Map<number, string> = new Map<number, string>();\n  selectedQuestion: Question;\n  public answeredQuestions: Array<Question> = [];\n\n  constructor() { }\n\n  public nextQuestion(question: Question) {\n    this.selectedQuestion = question;\n    this.newQuestionSubject.next(this.selectedQuestion);\n  }\n\n  public evaluate(possibility: Possibility) {\n    this.answered.set(this.selectedQuestion.questionId, possibility.answerValue);\n    this.answeredQuestions[this.answeredQuestions.length] = this.selectedQuestion;\n    if (possibility.nextQuestion != null) {\n      this.nextQuestion(possibility.nextQuestion);\n    } else {\n      this.newQuestionSubject.complete();\n    }\n  }\n\n  public goBack() {\n    if (this.answeredQuestions.length > 0) {\n      this.selectedQuestion = this.answeredQuestions[this.answeredQuestions.length - 1];\n      this.newQuestionSubject.next(this.selectedQuestion);\n      this.answeredQuestions.splice(this.answeredQuestions.length - 1, 1);\n    }\n  }\n\n  public getMaxQuestions(nextQuestion: Question = this.selectedQuestion): number {\n    let tmp = nextQuestion;\n    let numberOfQuestions = this.answered.size + 1;\n    while (tmp != null) {\n      tmp = tmp.possibleAnswers[0].nextQuestion;\n      numberOfQuestions++;\n    }\n    return numberOfQuestions;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/evaluator/evaluator.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Question } from '../entities/question';\nimport { Observable } from 'rxjs/observable';\n\n@Injectable()\nexport class HttpQuestionService {\n  baseurl: String = 'http://206.189.57.185:28080/real-estate/rest/';\n  // baseurl: String = 'http://localhost:28080/real-estate/rest/';\n  constructor(private httpClient: HttpClient) { }\n\n  public getQuestion(): Observable<Question> {\n    return this.httpClient.get<Question>(this.baseurl + 'question');\n  }\n\n  public evaluate(evaluation: Map<number, string>): Observable<number> {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n    const mapStr = JSON.stringify(Array.from(evaluation.entries()));\n    return this.httpClient\n      .post<number>(\n        this.baseurl + 'question',\n        '{ \\\"answers\\\": ' + mapStr + ' }',\n        { headers: headers }\n        );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/http-question/http-question.service.ts","module.exports = \".body-section {\\r\\n  background-color: lightgray;\\r\\n  width: 100%;\\r\\n  left:0;\\r\\n  right: 0;\\r\\n  padding-bottom: 20px;\\r\\n  padding-top: 10px;\\r\\n}\\r\\n\\r\\n.number {\\r\\n  width: 200px;\\r\\n}\\r\\n\\r\\n.selected {\\r\\n  background-color: lightgreen;\\r\\n  outline: none;\\r\\n  border-color: lightgreen;\\r\\n  -webkit-box-shadow: 0 0 20px lightgreen;\\r\\n          box-shadow: 0 0 20px lightgreen;\\r\\n}\\r\\n\\r\\nbutton.selected {\\r\\n  fill: lightgreen;\\r\\n}\\r\\n\\r\\n.image_icon {\\r\\n  height: 10%;\\r\\n  width: 10%;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\nbutton.possibility {\\r\\n  background-color: darkgray;\\r\\n  fill: darkgray;\\r\\n}\\r\\n\\r\\ndiv.possibilityRow {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\ninput {\\r\\n  display: inline-block;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/questionnaire/questionnaire.component.css\n// module id = ./src/app/questionnaire/questionnaire.component.css\n// module chunks = main","module.exports = \"<span>\\n  <p style=\\\"display:inline\\\">Bereits {{evaluator.answeredQuestions.length}} Frage(n) beantwortet!</p>\\n</span>\\n\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"progress\\\">\\n    <div class=\\\"progress-bar\\\" [style.width]=\\\"getProgress()\\\">\\n      Frage {{currentAnsweredQuestions}} von {{maxQuestions}}\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"container body-section\\\">\\n  <div class=\\\"\\\">\\n    <h1>{{question.text}}</h1>\\n  </div>\\n  <div class=\\\"possibilityRow\\\">\\n    <span *ngFor=\\\"let possibility of question.possibleAnswers\\\">\\n      <button *ngIf=\\\"question.type === 'button'\\\" (click)=\\\"onAnswerClicked(possibility)\\\"\\n              [ngClass]=\\\"'possibility ' + question.classForHTMLElement + ' ' + getSelected(possibility)\\\">{{possibility.answerText}}</button>\\n\\n      <img [title]=\\\"possibility.answerValue\\\" *ngIf=\\\"question.type === 'image'\\\" [alt]=\\\"possibility.answerText\\\" (click)=\\\"onAnswerClicked(possibility)\\\"\\n           [ngClass]=\\\"question.classForHTMLElement + ' ' + getSelected(possibility)\\\"\\n           [src]=\\\"possibility.imgSrc\\\"/>\\n\\n      <label *ngIf=\\\"question.type === 'input'\\\">{{possibility.answerText}}\\n        <input class=\\\"\\\" name=\\\"inputValue\\\" [type]=\\\"getType()\\\" *ngIf=\\\"question.type === 'input'\\\"\\n               [(ngModel)]=\\\"possibility.answerValue\\\"\\n               (keyup)=\\\"onInputDetected(possibility)\\\"\\n               [ngClass]=\\\"question.classForHTMLElement + ' ' + getSelected(possibility)\\\">\\n      </label>\\n      <div *ngIf=\\\"question.type === 'multiInput'\\\" class=\\\"form-group row\\\">\\n        <label class=\\\"\\\">{{possibility.answerText}}\\n        <input class=\\\"\\\" name=\\\"multiInputValue\\\" type=\\\"text\\\" [(ngModel)]=\\\"possibility.answerValue\\\"\\n               (keyup)=\\\"onInputDetected(possibility)\\\"\\n               [ngClass]=\\\"question.classForHTMLElement + ' ' + getSelected(possibility)\\\">\\n        </label>\\n      </div>\\n    </span>\\n  </div>\\n  <div class=\\\"\\\">\\n    <button class=\\\"btn\\\" (click)=\\\"evaluator.goBack(chosen)\\\">ZurÃ¼ck</button>\\n    <button class=\\\"btn\\\" (click)=\\\"evaluateAnswer()\\\" [disabled]=\\\"chosen === undefined\\\">Weiter</button>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/questionnaire/questionnaire.component.html\n// module id = ./src/app/questionnaire/questionnaire.component.html\n// module chunks = main","import { Component, OnChanges, Input } from '@angular/core';\nimport { Question } from '../entities/question';\nimport { EvaluatorService } from '../evaluator/evaluator.service';\nimport { Possibility } from '../entities/possibility';\nimport {SafeStyle} from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-questionnaire',\n  templateUrl: './questionnaire.component.html',\n  styleUrls: ['./questionnaire.component.css']\n})\nexport class QuestionnaireComponent implements OnChanges {\n  @Input() question: Question;\n\n  chosen: Possibility;\n  maxQuestions = 0;\n  currentAnsweredQuestions = 0;\n\n  constructor(private evaluator: EvaluatorService) { }\n  ngOnChanges() {\n    this.question.possibleAnswers.forEach(p => p.isSelected = false);\n    if (this.question.type === 'input') {\n      this.chosen = this.question.possibleAnswers[0];\n    }\n\n    // this.maxQuestions = this.evaluator.getMaxQuestions();\n    this.currentAnsweredQuestions = this.evaluator.answeredQuestions.length + 1;\n  }\n\n  getSelected(possibility: Possibility): String {\n    if (possibility.isSelected) {\n      return 'selected';\n    }\n    return '';\n  }\n\n  getProgress(): SafeStyle {\n    return (this.currentAnsweredQuestions / this.maxQuestions * 100) + '%';\n  }\n\n  getType(): String {\n    if (this.question.classForHTMLElement.includes('number')) {\n      return 'number';\n    }\n    return 'text';\n  }\n\n  onAnswerClicked(possibility: Possibility) {\n    this.question.possibleAnswers.forEach(p => p.isSelected = false);\n    this.maxQuestions = this.evaluator.getMaxQuestions(possibility.nextQuestion);\n    this.chosen = possibility;\n    this.chosen.isSelected = true;\n  }\n\n  onInputDetected(possibility: Possibility) {\n    if (possibility.answerValue == null || possibility.answerValue === '') {\n      this.chosen = undefined;\n    } else {\n      this.chosen = possibility;\n    }\n  }\n\n  evaluateAnswer() {\n    if (this.chosen !== undefined) {\n      this.evaluator.evaluate(this.chosen);\n      this.chosen = undefined;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/questionnaire/questionnaire.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}